<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel='stylesheet' href='/stylesheets/styleAdminPasswordChange.css'>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"
        integrity="sha512-RNLkV3d+aLtfcpEyFG8jRbnWHxUqVZozacROI4J2F1sTaDqo1dPQYs01OMi1t1w9Y2FdbSCDSQ2ZVdAC8bzgAg=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
        integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

</head>

<body>
    <div class="overlay" onclick="off()"></div>
    <header class="text-center" id="courseAddHeader">
        <div>
            <img src="https://vit.ac.in/files/gravitas19/images/vit_white.png" id="courseAddHeaderLogo" alt="">
        </div>
        <div class="topright">
            <a href="" style="text-decoration: none; color:#fff">
                <img src="https://cdn-icons-png.flaticon.com/128/3237/3237472.png" width="40" height="40" alt="">
                {{user.facultyName}}
            </a>
        </div>
    </header>
    <div class="containerMain">
        <a href="#" class="toggleBox">
            <span class="icon"></span>
        </a>
        <ul class="navItems">
            <li>
                <a href="/admin-home">
                    <i class="fa fa-home" style="--i:1"></i>
                    <span style="--g:1">home</span>
                </a>
            </li>
            <li>
                <a href="/course-add-form">
                    <i class="fa fa-user" style="--i:2"></i>
                    <span style="--g:2">Add course</span>
                </a>
            </li>
            <li>
                <a href="/reports-view">
                    <i class="fa fa-folder" style="--i:3"></i>
                    <span style="--g:3">reports</span>
                </a>
            </li>
            <li>
                <a href="/admin-password-change">
                    <i class="fa-solid fa-file-circle-check" style="--i:4"></i>
                    <span style="--g:4">Database management</span>
                </a>
            </li>
            <li>
                <a href="/admin-shedule-view">
                    <i class="fa-solid fa-calendar-days" style="--i:5"></i>
                    <span style="--g:5">shedule</span>
                </a>
            </li>
            <li>
                <a href="/admin-shedule-booking">
                    <i class="fa-solid fa-calendar-days" style="--i:6"></i>
                    <span style="--g:6">shedule Booking</span>
                </a>
            </li>
            <li>
                <a href="/logout">
                    <i class="fa fa-globe" style="--i:7"></i>
                    <span style="--g:7">logout</span>
                </a>
            </li>
        </ul>
    </div>
    <section class="upperSection container">
        <div class="courseAddForm w-100 col-md-8 col-lg-6 col-10"
            style="box-shadow: 6px 7px 7px rgba(0, 0, 0, 0.25);background: #f2f2f2;">
            <div class="itemChooseButtons row p-2 w-100"
                style="background-color:#d3d3d3;height: fit-content;border-radius: 44px;margin-left: 1px;margin-top: 0px;">
                <div class="profile  col-6" style="direction: rtl;">
                    <button type="button" class="btn text-white glow-on-hover"
                        style="font-weight: bold;background: #6b9cab; border-radius: 15px; width:150px;font-size:large;"
                        id="profileButton" onclick="">PROFILES</button>
                </div>
                <div class="courses col-6">
                    <button type="button" class="btn text-white "
                        style="font-weight: bold;background: #6b9cab; border-radius: 15px; width:150px;font-size:large;"
                        id="courseButton" onclick="">COURSES</button>
                </div>
            </div>

            <div class="content m-4 p-3 col-md-6" style="background-color: powderblue; border-radius:12px" id="content">
                <div class='row text-center'>
                    <div class="form-group row">
                        <label for="inputEmployeeId" class="col-sm-5 col-md-3 col-form-label"
                            style="font-weight: bolder">Employee ID</label>
                        <div class="col-sm-7 col-md-9">
                            <input type="text" class="form-control" id="inputEmployeeId"
                                onkeyup="this.value = this.value.toUpperCase()">
                        </div>
                    </div>
                </div>
            </div>

            <div class="searchButton text-center">
                <button type="button" class="btn text-white btn-primary m-3"
                    style="font-weight: bold; width:170px; border-radius: 15px;font-size:larger;border: none;background-color: #30c65e;"
                    id="search">SEARCH</button>
            </div>
        </div>
    </section>

    <section class="secondSection container " id="contentDisplay" style="background-color: #eee;border-radius:10px;">

    </section>

    <section class="importSection container">
        <div class="row p-3" style="justify-content: center;">
            <div class="p-4 col-md-6 col-lg-7"
                style="background-color: powderblue;border-radius:10px;box-shadow: 6px 7px 7px rgba(0, 0, 0, 0.25)">
                <div class="row">
                    <div class="input-group mb-3">
                        <input type="file" class="form-control" id="inputGroupFile"
                            accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">
                        <label class="input-group-text" for="inputGroupFile">Upload</label>
                    </div>
                    <div class="row" style="justify-content: center;">
                        <button type="button" class="btn text-white btn-primary m-1"
                            style="font-weight: bold; width:170px; border-radius: 15px;font-size:larger;border: none;background-color: #30c65e;"
                            id="import">Extract</button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="container mt-4 hide" id="importedData">

        <div class="row p-3" style="justify-content: center;">
            <div class="courseInfo p-2" style="background-color: #dadada; width:max-content; border-radius:10px;">
                <table class="table table-sm table-borderless" cell-padding="10">
                    <thead>
                        <tr>
                            <th style="width: 35%;" class="text-center">Property</th>
                            <th class="text-center">Value</th>
                        </tr>
                    </thead>
                    <tbody id="courseInfoDisplay">

                    </tbody>
                </table>
            </div>
        </div>

        <div class="row p-3" style="justify-content: center;">
            <div class="col-md-12 col-sm-12 col-lg-12" style="overflow: auto;">
                <table class="table table-sm table-bordered table-hover table-striped" cell-padding="7">
                    <thead>
                        <tr>
                            <th class="text-center align-middle" rowspan="2" style="width: 7%;">Week</th>
                            <th class="text-center align-middle" rowspan="2">Topic</th>
                            <th class="text-center align-middle" rowspan="2">Recorded Date</th>
                            <th class="text-center align-middle" rowspan="2">Edited date</th>
                            <th class="text-center align-middle" colspan="2">Duration</th>
                            <th class="text-center align-middle" rowspan="2" style="width: 100px;">Path</th>
                            <th class="text-center align-middle" rowspan="2">Link</th>
                        </tr>
                        <tr>
                            <th class="text-center">Week</th>
                            <th class="text-center">Topic</th>
                        </tr>
                    </thead>
                    <tbody id="importedDataDisplay">

                    </tbody>
                </table>
            </div>
        </div>

        <div class="row p-3" style="justify-content: center;">
            <div class="col-md-4 col-sm-4 col-lg-3 text-center">
                <button type="button" class="btn btn-info text-white" id="uploadData"
                    onclick="uploadData()">Upload</button>
            </div>
        </div>
    </section>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js"
        integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js"
        integrity="sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK"
        crossorigin="anonymous"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        var toggleClick = document.querySelector(".toggleBox");
        var containerMain = document.querySelector(".containerMain");
        var overlayScreen = document.querySelector(".overlay");

        toggleClick.addEventListener('click', () => {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        })

        function off() {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        }

        let globalImportedData = ""
        let currentSelected = "profile";
        let selectedFile;
        $(document).ready(function () {
            $("#profileButton").click(function () {
                $("#content").empty();
                currentSelected = "profile";
                $("#content").append(`<div class='row text-center'>
                    <div class="form-group row">
                        <label for="inputEmployeeId" class="col-sm-5 col-md-3 col-form-label"
                            style="font-weight: bolder">Employee ID</label>
                        <div class="col-sm-7 col-md-9">
                            <input type="text" class="form-control" id="inputEmployeeId" onkeyup="this.value = this.value.toUpperCase()">
                        </div>
                    </div>
                </div>`);
            });



            $("#import").click(function () {
                let sample = 0
                fetch("/import-from-excel", {
                    headers: { 'Content-Type': "application/json" },
                    method: "POST",
                    body: JSON.stringify({ sample: 1 })
                }).then(res => res.json()).then((data) => {
                    if (data.status == true) {
                        let importedData = data.importedData
                        console.log(importedData)
                        globalImportedData = importedData

                        $('#importedData').removeClass("hide")

                        $('#courseInfoDisplay').empty()
                        $('#courseInfoDisplay').append(`
                            <tr><th style="width: 500px;">Course Name</th><td>${importedData.courseName}</td></tr>
                            <tr><th>Course ID</th><td>${importedData.courseId}</td></tr>
                            <tr><th>Semester</th><td>${importedData.semester}</td></tr>
                            <tr><th>Degree</th><td>${importedData.degree}</td></tr>
                            <tr><th>Credits</th><td>${importedData.credits}</td></tr>
                            <tr><th>Duration Target</th><td>${importedData.durationTarget}</td></tr>
                            <tr><th>Editor Name</th><td>${importedData.editorName}</td></tr>
                            <tr><th>Faculty Name</th><td>${importedData.facultyName}</td></tr>
                            <tr><th>Faculty ID</th><td>${importedData.facultyId}</td></tr>
                            <tr><th>Faculty Phone No</th><td>${importedData.facultyPhoneNumber}</td></tr>
                            <tr><th>Producer Name</th><td>${importedData.preProducerName}</td></tr>
                            <tr><th>Course Created Time</th><td>${importedData.courseCreatedTime}</td></tr>
                            <tr><th>Production Duration</th><td>${importedData.preCompletedMinutes + ":" + importedData.preCompletedSeconds}</td></tr>
                            <tr><th>Edited Duration</th><td>${importedData.postCompletedMinutes + ":" + importedData.postCompletedSeconds}</td></tr>
                            <tr><th>LMS Duration</th><td>${importedData.totalCompletedRenderedMinutes + ":" + importedData.totalCompletedRenderedSeconds}</td></tr>
                            <tr><th>Status</th><td>${importedData.status}</td></tr>
                        `)

                        let display = document.getElementById("importedDataDisplay")
                        display.innerHTML = ""
                        let coursePlan = importedData.coursePlan
                        let keys = Object.keys(coursePlan)

                        for (var i = 0; i < keys.length; i++) {
                            if (keys[i].split("-").length == 1) {
                                $("#importedDataDisplay").append(`
                                    <tr>
                                        <td class="text-center">${keys[i]}</td>
                                        <td class="text-center">${coursePlan[keys[i]]}</td>
                                        <td colspan="6"></td>
                                    </tr>
                                    `)
                            }
                            else {
                                if (coursePlan[keys[i]] != "") {
                                    let date = new Date(importedData.postTopicsCompleted[keys[i]]["timestamp"])
                                    let newDate = (date.getMonth() + 1) + "-" + date.getDate() + "-" + date.getFullYear()
                                    $("#importedDataDisplay").append(`
                                    <tr>
                                        <td class="text-center">${keys[i]}</td>
                                        <td class="text-center">${coursePlan[keys[i]]}</td>
                                        <td class="text-center">${importedData.preTopicsCompleted[keys[i]]}</td>
                                        <td class="text-center">${newDate}</td>
                                        <td class="text-center">${importedData.postTopicsCompleted[keys[i]].duration.split(":")[0]}</td>
                                        <td class="text-center">${importedData.postTopicsCompleted[keys[i]].duration.split(":")[1]}</td>
                                        <td>${importedData.postTopicsCompleted[keys[i]].postPath}</td>
                                        <td class="text-center">${importedData.postTopicsCompleted[keys[i]].videoLink}</td>
                                    </tr>
                                    `)
                                }
                                else {
                                    $("#importedDataDisplay").append(`
                                    <tr>
                                        <td class="text-center">${keys[i]}</td>
                                        <td colspan="7"></td>
                                    </tr>
                                    `)
                                }
                            }
                        }
                        Swal.fire({
                            title: 'Excel Data Imported',
                            icon: 'success',
                            timer: 1000,
                            showConfirmButton: false
                        })
                    }
                    else {
                        Swal.fire({
                            title: 'Something went wrong',
                            icon: 'error',
                            showConfirmButton: true
                        })
                    }
                })
            })

            $("#inputGroupFile").change(function (event) {
                selectedFile = event.target.files[0]
                /*fetch("/import-from-excel", {
                    headers: { 'Content-Type': "application/json" },
                    method: "POST",
                    body: JSON.stringify({ data:file[0].files[0].name }),
                }).then(res => res.json()).then((data) => {
                    /*downloadFile("/" + data.path, "Report")
                    Swal.fire({
                        title: 'Excel Report Generated',
                        icon: 'success',
                        timer: 1000,
                        showConfirmButton: false
                    })
                })*/
            });

            $("#courseButton").click(function () {
                $("#content").empty();
                currentSelected = "course";
                $("#content").append(`<div class='row text-center'> <div class="form-group row">
                        <label for="inputPassword" class="col-sm-5 col-md-3 col-form-label"
                            style="font-weight: bolder">Course ID</label>
                        <div class="col-sm-7 col-md-9">
                            <input type="text" class="form-control" id="inputCourseId" onkeyup="this.value = this.value.toUpperCase()">
                        </div>
                    </div>
                </div>`);
            })

            $("#search").click(function () {
                let employeeId = $("#inputEmployeeId").val();
                let courseId = $("#inputCourseId").val();
                if (employeeId || courseId) {
                    if (currentSelected == "profile") {
                        $.ajax({
                            type: "POST",
                            url: "/admin-database-management",
                            data: { reqfor: "profileFetch", id: employeeId },
                            beforeSend: function () {
                                Swal.fire({
                                    title: 'Loading',
                                    text: 'Please wait....',
                                    showConfirmButton: false,
                                    didOpen: () => {
                                        Swal.showLoading()
                                    },
                                });
                            },
                            success: function (response) {
                                if (response.status == "true") {
                                    let accountType = ""
                                    if (response.data.accountType == "0") { accountType = "Admin" }
                                    else if (response.data.accountType == "1") { accountType = "Production" }
                                    else if (response.data.accountType == "2") { accountType = "Editor" }
                                    else if (response.data.accountType == "3") { accountType = "Faculty" }
                                    else if (response.data.accountType == "4") { accountType = "LMS" }
                                    else if (response.data.accountType == "5") { accountType = "Coordinator" }
                                    else { accountType = "Reports" }
                                    $("#contentDisplay").removeClass("hide");
                                    $("#contentDisplay").empty();
                                    $("#contentDisplay").append(

                                        `<div class="row p-1" style="justify-content:center;">
            <div class="col-md-3 m-2 text-center p-4"
                style="background-color: #fff;border-radius: 11px;box-shadow: 2px 3px 3px rgb(0 0 0 / 25%);">
                <img src="https://cdn-icons-png.flaticon.com/128/1177/1177568.png" alt="" height="100" width="100">
                <h5 class="mt-4" id="employeeName">${response.data.facultyName}</h5>
            </div>
            <div class="col-md-7 m-2 p-3"
                style="background-color: #fff;border-radius: 11px;box-shadow: 2px 3px 3px rgb(0 0 0 / 25%);">
                <table class="table table-borderless">
                    <tbody>
                        <tr>
                            <td>Faculty ID</td>
                            <td id="employeeId">${response.data.facultyId}</td>
                        </tr>
                        <tr>
                            <td>Email</td>
                            <td id="employeeEmail">${response.data.email}</td>
                        </tr>
                        <tr>
                            <td>Phone Number</td>
                            <td id="employeePhoneNo">${response.data.phoneNumber}</td>
                        </tr>
                        <tr>
                            <td>Account Type</td>
                            <td id="employeeAccountType">${accountType}</td>
                            <td><a href="javascript:changeAccountType()"><i class="fa fa-pencil-square-o fa-lg" aria-hidden="true"></i></a></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>`)
                                    Swal.close()
                                }
                                else {
                                    Swal.close()
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Employee not found!'
                                    })
                                }
                            },
                            error: function () {
                                Swal.close()
                                swal.fire({
                                    icon: 'error',
                                    html: '<h5>Error!</h5>'
                                });
                                return false;
                            }
                        });
                    }
                    else {
                        $.ajax({
                            type: "POST",
                            url: "/admin-database-management",
                            data: { reqfor: "courseFetch", id: courseId },
                            beforeSend: function () {
                                Swal.fire({
                                    title: 'Loading',
                                    text: 'Please wait....',
                                    showConfirmButton: false,
                                    didOpen: () => {
                                        Swal.showLoading()
                                    },
                                });
                            },
                            success: function (response) {
                                if (response.status == "true") {
                                    let accountType = ""
                                    $("#contentDisplay").removeClass("hide");
                                    $("#contentDisplay").empty();
                                    $("#contentDisplay").append(`
        <div class="row p-1" style="justify-content:center;">
            <div class="col-md-8 m-2 p-3"
                style="background-color: #fff;border-radius: 11px;box-shadow: 2px 3px 3px rgb(0 0 0 / 25%);">
                <table class="table table-borderless">
                    <tbody>
                        <tr>
                            <td>Course Name</td>
                            <td id="employeeId">${response.data.courseName}</td>
                        </tr>
                        <tr>
                            <td>Course ID</td>
                            <td id="employeeEmail">${response.data.courseId}</td>
                        </tr>
                        <tr>
                            <td>Degree</td>
                            <td id="employeePhoneNo">${response.data.degree}</td>
                        </tr>
                        <tr>
                            <td>Semester</td>
                            <td id="employeeAccountType">${response.data.semester}</td>
                        </tr>
                        <tr>
                            <td>Credits</td>
                            <td id="employeeEmail">${response.data.credits}</td>
                        </tr>
                        <tr>
                            <td>Duration Target</td>
                            <td id="employeeEmail">${response.data.durationTarget}</td>
                        </tr>
                        <tr>
                            <td>Editor ID</td>
                            <td id="employeeEmail">${response.data.editorId}</td>
                        </tr>
                        <tr>
                            <td>Editor Name</td>
                            <td id="employeeEmail">${response.data.editorName}</td>
                            <td><a href="javascript:changeCourseEditor()"><i class="fa fa-pencil-square-o fa-lg" aria-hidden="true"></i></a></td>
                        </tr>
                        <tr>
                            <td>Faculty ID</td>
                            <td id="employeeEmail">${response.data.facultyId}</td>
                            <td><a href="javascript:changeCourseFaculty()"><i class="fa fa-pencil-square-o fa-lg" aria-hidden="true"></i></a></td>
                        </tr>
                        <tr>
                            <td>Faculty Name</td>
                            <td id="employeeEmail">${response.data.facultyName}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
                                    `);
                                    Swal.close()
                                }
                                else {
                                    Swal.close()
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Course not found!'
                                    })
                                }
                            },
                            error: function () {
                                Swal.close()
                                swal.fire({
                                    icon: 'error',
                                    html: '<h5>Error!</h5>'
                                });
                                return false;
                            }
                        });
                    }
                }
                else {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: false,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    if (!employeeId && currentSelected == "profile") {
                        Toast.fire({
                            icon: 'error',
                            title: 'Enter Employee ID'
                        })
                    }
                    else {
                        Toast.fire({
                            icon: 'error',
                            title: 'Enter Course Id'
                        })
                    }
                }
            })

        });

        function uploadData() {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, upload!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch("/DB-upload-Excel", {
                        headers: { 'Content-Type': "application/json" },
                        method: "POST",
                        body: JSON.stringify({ importedData: globalImportedData })
                    }).then(res => res.json()).then((response) => {
                        if (response.status) {
                            Swal.fire({
                                title: 'Course Uploaded Succesfully',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false
                            })
                            $('#importedData').addClass("hide")
                        }
                        else {
                            Swal.fire({
                                title: 'Course Uploading Failed',
                                icon: 'error',
                                showConfirmButton: true
                            })
                        }
                    })
                }
            })
        }

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success m-1',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        async function changeAccountType() {
            let employeeId = $("#employeeId").text();

            const inputOptions = new Promise((resolve) => {
                resolve({
                    '1': 'Production',
                    '2': 'Editor',
                    '3': 'Faculty',
                    '4': "LMS",
                    '5': "Coordinator",
                    '6': "Reports"
                })
            })

            const fire1 = Swal.fire({
                title: 'Select Account Type',
                input: 'select',
                inputOptions: inputOptions,
                inputPlaceholder: 'Select a Account Type',
                showCancelButton: true,
                confirmButtonText: 'Yes, update it!',
                cancelButtonText: 'No, cancel!',
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to choose something!'
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    if (result.value == "5") {
                        fetch("/degree-list", {
                            headers: { 'Content-Type': "application/json" },
                            method: "POST",
                            body: JSON.stringify({}),
                        }).then(res => res.json()).then(response => {
                            let degreeList = response.degree
                            let degrees = {}
                            for (var i = 0; i < degreeList.length; i++) {
                                degrees[degreeList[i]] = degreeList[i]
                            }

                            const degreeOptions = new Promise((resolve) => {
                                resolve(degrees)
                            })

                            Swal.fire({
                                title: 'Select Degree',
                                input: 'select',
                                inputOptions: degreeOptions,
                                inputPlaceholder: 'Select a Degree',
                                showCancelButton: true,
                                confirmButtonText: 'Yes, update it!',
                                cancelButtonText: 'No, cancel!',
                                inputValidator: (value) => {
                                    if (!value) {
                                        return 'You need to choose something!'
                                    }
                                }
                            }).then((degreeData) => {
                                if (degreeData.isConfirmed) {
                                    Swal.fire({
                                        title: 'Are you sure?',
                                        text: "You want to change the Account Type?",
                                        icon: 'warning',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'Yes, change!'
                                    }).then((e) => {
                                        if (e.isConfirmed) {
                                            $.ajax({
                                                type: "POST",
                                                url: "/admin-database-management",
                                                data: { reqfor: "profileUpdate", subreq: "accountTypeCoordinator", id: employeeId, value: result.value, degree: degreeData.value },
                                                beforeSend: function () {
                                                    Swal.fire({
                                                        title: 'Loading',
                                                        text: 'Please wait....',
                                                        showConfirmButton: false,
                                                        didOpen: () => {
                                                            Swal.showLoading()
                                                        },
                                                    });
                                                },
                                                success: function (response) {
                                                    swalWithBootstrapButtons.fire(
                                                        'Updated!',
                                                        'Account type has been updated.',
                                                        'success'
                                                    ).then((e) => {
                                                        $("#search").click();
                                                    })
                                                },
                                                error: function () {
                                                    Swal.close()
                                                    swal.fire({
                                                        icon: 'error',
                                                        html: '<h5>Error!</h5>'
                                                    });
                                                    return false;
                                                }
                                            });
                                        }
                                    })
                                }
                            })
                        })
                    }
                    else {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: "You want to change the Account Type?",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, change!'
                        }).then((e) => {
                            if (e.isConfirmed) {
                                $.ajax({
                                    type: "POST",
                                    url: "/admin-database-management",
                                    data: { reqfor: "profileUpdate", subreq: "accountTypeOthers", id: employeeId, value: result.value },
                                    beforeSend: function () {
                                        Swal.fire({
                                            title: 'Loading',
                                            text: 'Please wait....',
                                            showConfirmButton: false,
                                            didOpen: () => {
                                                Swal.showLoading()
                                            },
                                        });
                                    },
                                    success: function (response) {
                                        swalWithBootstrapButtons.fire(
                                            'Updated!',
                                            'Account type has been updated.',
                                            'success'
                                        ).then((e) => {
                                            $("#search").click();
                                        })
                                    },
                                    error: function () {
                                        Swal.close()
                                        swal.fire({
                                            icon: 'error',
                                            html: '<h5>Error!</h5>'
                                        });
                                        return false;
                                    }
                                });
                            }
                        })
                    }
                }
            })
        }

        function changeCourseFaculty() {
            let courseId = $("#inputCourseId").val();
            let globalData = ""
            $.ajax({
                type: "POST",
                url: "/admin-database-management",
                data: { reqfor: "facultyListFetch" },
                beforeSend: function () {
                    Swal.fire({
                        title: 'Loading',
                        text: 'Please wait....',
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading()
                        },
                    });
                },
                success: function (response) {
                    globalData = response
                    Swal.close()
                    let inputOptions = {}
                    for (let i = 0; i < response.data.length; i++) {
                        inputOptions[response.data[i]["value"]] = response.data[i]["display"]
                    }
                    globalData["inputOptions"] = inputOptions
                    const fire2 = Swal.fire({
                        title: 'Select Faculty Name',
                        input: 'select',
                        inputOptions: globalData.inputOptions,
                        inputPlaceholder: 'Select a faculty',
                        showCancelButton: true,
                        inputValidator: (value) => {
                            if (!value) {
                                return 'You need to choose a faculty!'
                            }
                        }
                    }).then((facultyDetails) => {
                        if (facultyDetails.isConfirmed) {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: "You want to change the Faculty?",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, change!'
                            }).then((e) => {
                                if (e.isConfirmed) {
                                    let facultyName = facultyDetails["value"].split("/")[0]
                                    let facultyId = facultyDetails["value"].split("/")[1]
                                    $.ajax({
                                        type: "POST",
                                        url: "/admin-database-management",
                                        data: { reqfor: "courseUpdate", subreq: "faculty", courseId: courseId, facultyId: facultyId, facultyName: facultyName },
                                        success: function () {
                                            Swal.close()
                                            swalWithBootstrapButtons.fire(
                                                'Updated!',
                                                'Faculty has been updated.',
                                                'success'
                                            ).then((e) => {
                                                $("#search").click();
                                            })
                                        },
                                        error: function () {
                                            Swal.close()
                                            swal.fire({
                                                icon: 'error',
                                                html: '<h5>Error!</h5>'
                                            });
                                            return false;
                                        }
                                    });
                                }
                            })
                        }
                    })
                },
                error: function () {
                    Swal.close()
                    swal.fire({
                        icon: 'error',
                        html: '<h5>Error!</h5>'
                    });
                    return false;
                }
            })
        }

        function changeCourseEditor() {
            let courseId = $("#inputCourseId").val();
            let globalData = ""
            $.ajax({
                type: "POST",
                url: "/admin-database-management",
                data: { reqfor: "EditorListFetch" },
                beforeSend: function () {
                    Swal.fire({
                        title: 'Loading',
                        text: 'Please wait....',
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading()
                        },
                    });
                },
                success: function (response) {
                    globalData = response
                    let inputOptions = {}
                    for (let i = 0; i < response.data.length; i++) {
                        inputOptions[response.data[i]["value"]] = response.data[i]["display"]
                    }
                    globalData["inputOptions"] = inputOptions
                    Swal.close()
                    const fire2 = Swal.fire({
                        title: 'Select Editor Name',
                        input: 'select',
                        inputOptions: globalData.inputOptions,
                        inputPlaceholder: 'Select a Editor',
                        showCancelButton: true,
                        inputValidator: (value) => {
                            if (!value) {
                                return 'You need to choose a editor!'
                            }
                        }
                    }).then((editorDetails) => {
                        if (editorDetails.isConfirmed) {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: "You want to change the Editor?",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, change!'
                            }).then((e) => {
                                if (e.isConfirmed) {
                                    let editorName = editorDetails["value"].split("/")[0]
                                    let editorId = editorDetails["value"].split("/")[1]
                                    $.ajax({
                                        type: "POST",
                                        url: "/admin-database-management",
                                        data: { reqfor: "courseUpdate", subreq: "editor", courseId: courseId, editorName: editorName, editorId: editorId },
                                        success: function () {
                                            Swal.close()
                                            swalWithBootstrapButtons.fire(
                                                'Updated!',
                                                'Editor has been updated.',
                                                'success'
                                            ).then((e) => {
                                                $("#search").click();
                                            })
                                        },
                                        error: function () {
                                            Swal.close()
                                            swal.fire({
                                                icon: 'error',
                                                html: '<h5>Error!</h5>'
                                            });
                                            return false;
                                        }
                                    });
                                }
                            })
                        }
                    })
                },
                error: function () {
                    Swal.close()
                    swal.fire({
                        icon: 'error',
                        html: '<h5>Error!</h5>'
                    });
                    return false;
                }
            })
        }
    </script>
</body>

</html>